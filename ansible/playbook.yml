
- hosts: all
  become: yes
  tasks:
    - name: Set repository URL to stable
      set_fact:
        repository_base: "{{ 'https://download.opensuse.org/repositories/home:/sebix:/intelmq/' if lookup('env', 'intelmq_vagrant_test_stable') == 'yes' else 'https://download.opensuse.org/repositories/home:/sebix:/intelmq:/unstable/'}}"
    - name: Prepare Debian and Ubuntu
      include: debian_based.yml
      when: ansible_facts['distribution'] == "Debian" or ansible_facts['distribution'] == "Ubuntu"
    - name: Setup Debian 10
      include: debian_10.yml
      when: ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_version'] == "10"
    - name: Setup Ubuntu 18.04
      include: ubuntu_1804.yml
      when: ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_version'] == "18.04"
    - name: Setup Ubuntu 20.04
      include: ubuntu_2004.yml
      when: ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_version'] == "20.04"
    - name: Setup CentOS
      include: centos.yml
      when: ansible_facts['distribution'] == "CentOS"
    - name: Install IntelMQ packages
      package:
        name: "{{ item }}"
      with_items:
      - intelmq-manager
      - intelmq-api
      - intelmq
    - name: Setup CentOS
      include: centos_postinstall.yml
      when: ansible_facts['distribution'] == "CentOS"
    - name: Copy runtime.conf
      copy:
        src: '../assets/runtime.conf'
        dest: '/etc/intelmq/runtime.conf'
    - name: Copy pipeline.conf
      copy:
        src: '../assets/pipeline.conf'
        dest: '/etc/intelmq/pipeline.conf'
    - name: Make sure redis is running
      ansible.builtin.systemd:
        state: started
        name: redis
    - name: Make sure webserver is running
      ansible.builtin.systemd:
        state: started
        name: "{{webserver}}"



# CLI related tests
#
# Those tests run intelmqctl
#
    - name: Run CLI tests
      include: "{{ item }}"
      loop: "{{ query('fileglob', 'tasks/cli/*.yml') | sort }}"

# API related tests
#
# Those tests access the intelmq-api and manage the botnet
# Most of them depend on the 00_registerauth.yml task that provides the authentication token
#
    - name: Run API tests
      include: "{{ item }}"
      loop: "{{ query('fileglob', 'tasks/api/*.yml') | sort }}"

# Manager related tests
#
# Those tests access the intelmq-manager webinterface
#
    - name: Run Manager tests
      include: "{{ item }}"
      loop: "{{ query('fileglob', 'tasks/manager/*.yml') | sort }}"
