- hosts: all
  become: yes
  tasks:
    - name: Install packages
      apt:
        update-cache: yes
        pkg:
          - gpg
    - name: Prepare Debian and Ubuntu
      include: debian_based.yml
      when: ansible_facts['distribution'] == "Debian" or ansible_facts['distribution'] == "Ubuntu"
    - name: Setup Debian 10
      include: debian_10.yml
      when: ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_version'] == "10"
    - name: Setup Ubuntu 18.04
      include: ubuntu_1804.yml
      when: ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_version'] == "18.04"
    - name: Setup Ubuntu 20.04
      include: ubuntu_2004.yml
      when: ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_version'] == "20.04"
    - name: Install packages
      apt:
        update-cache: yes
        pkg:
          - python3-intelmq-api
          - intelmq-manager
          - apache2
    - command: intelmqctl status file-output
      register: intelmqctlstatusfileoutput
      ignore_errors: yes
    - assert:
        that: "'Bot file-output is stopped.' in intelmqctlstatusfileoutput.stdout"
    - command: intelmqctl start file-output
      register: intelmqctlstartfileoutput
    - command: intelmqctl status file-output
      register: intelmqctlstatusfileoutput
      ignore_errors: yes
    - assert:
        that: "'Bot file-output is running.' in intelmqctlstatusfileoutput.stdout"
    - command: intelmqctl stop file-output

# API related tests
    - name: Register auth
      uri:
        url: http://localhost/intelmq/v1/api/login/
        body_format: json
        method: POST
        body:
          username: admin
          password: asdf
      register: auth

    - uri:
        url: http://localhost/intelmq/v1/api/queues
        status_code: [401]
        return_content: yes
      register: queuesnoauth
    - name: Check if authentication works
      assert:
        that: "'{\"errors\": {\"Authentication Required\": \"Please provide valid Token verification credentials\"}}' in queuesnoauth.content"

    - uri:
        url: http://localhost/intelmq/v1/api/queues
        return_content: yes
        headers:
          Authorization: '{{ auth.json.login_token }}'
      register: curlapiqueues
    - name: Check queue status via API
      assert:
        that: "'{{ lookup('file', '../assets/00_queues') }}' in curlapiqueues.content"

    - uri:
        url: http://localhost/intelmq/v1/api/bot/?id=gethostbyname-1-expert&action=status
        return_content: yes
        headers:
          Authorization: '{{ auth.json.login_token }}'
      register: apibotstatus
    - name: Check bot status via API
      assert:
        that: "'stopped' in apibotstatus.content"

    - uri:
        url: http://localhost/intelmq/v1/api/check
        return_content: yes
        headers:
          Authorization: '{{ auth.json.login_token }}'
      register: apicheck
    - name: Check API check
      assert:
        that: "'\"status\": \"success\"' in apicheck.content"

# manager related tests:
    - uri:
        url: http://localhost/intelmq-manager/
        return_content: yes
      register: manager
    - assert:
        that: "'<title>IntelMQ Manager</title>' in manager.content"
    - assert:
        that: "'<div id=\"login-status\">Not logged in</div>' in manager.content"

    - uri:
        url: http://localhost/intelmq-manager/about.html
        return_content: yes
      register: managerabout
    - assert:
        that: "'community driven initiative called <strong>IHAP</strong>' in managerabout.content"
    - assert:
        that: "'s design was influenced by' in managerabout.content"
